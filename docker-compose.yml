services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.dev
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    volumes:
      - ./apps/api:/app/apps/api
      - ./libs:/app/libs
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?schema=public
    env_file:
      - .env
    depends_on:
      - db

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.dev
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    volumes:
      - ./apps/web:/app/apps/web
      - ./libs:/app/libs
#      - /app/apps/web/node_modules
      - /app/apps/web/.next
    environment:
      - NODE_ENV=development
    env_file:
      - .env

  python:
    container_name: python
    build:
      context: ./apps/python
      dockerfile: Dockerfile.dev
    ports:
      - ${PYTHON_PORT}:${PYTHON_PORT}
    volumes:
      - ./apps/python:/app
    env_file:
      - .env

  # === Additional services === #

  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  postgres-data:
