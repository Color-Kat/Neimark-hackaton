services:
  api:
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.prod
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?schema=public
    env_file:
      - .env
    depends_on:
      - db

  web:
    restart: always
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.prod
      args:
        # Env variables for building process
        - NODE_ENV=production
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    env_file:
      - .env

  python:
    container_name: python
    build:
      context: ./apps/python
      dockerfile: Dockerfile.prod
    ports:
      - ${PYTHON_PORT}:${PYTHON_PORT}
    env_file:
      - .env
    restart: always

# ===== Additional Services ===== #

  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

volumes:
  postgres-data:
